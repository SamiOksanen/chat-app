version: '3.9'
services:
    chat-app-prod-db:
        image: postgres:14.4
        restart: unless-stopped
        env_file:
            - ./chat-app-db/database.env
        volumes:
            - database-data-prod:/var/lib/postgresql/data
            - ./chat-app-db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
        ports:
            - '5432:5432'
        networks:
            - chat-app-prod-net
    chat-app-prod-auth:
        build: 
            context: ./chat-app-auth
            dockerfile: Dockerfile.prod
        depends_on:
            - "chat-app-prod-db"
        environment:
            DATABASE_URL: postgres://chatapp:chatapp@chat-app-prod-db:5432/chatapp
        volumes:
            - ./chat-app-auth:/usr/src/app
            - /usr/src/app/node_modules
        ports:
            - '8084:8084'
        networks: 
            - chat-app-prod-net
    chat-app-prod-graphql-engine:
        image: hasura/graphql-engine:v2.8.4
        depends_on:
            - "chat-app-prod-db"
            - "chat-app-prod-auth"
        restart: unless-stopped
        environment:
            HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://chatapp:chatapp@chat-app-prod-db:5432/chatapp
            HASURA_GRAPHQL_DATABASE_URL: postgres://chatapp:chatapp@chat-app-prod-db:5432/chatapp
            HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
            HASURA_GRAPHQL_DEV_MODE: "false"
            HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
            HASURA_GRAPHQL_ADMIN_SECRET: chatappadminsecretkey
            HASURA_GRAPHQL_AUTH_HOOK: http://chat-app-prod-auth:8084/webhook
            HASURA_GRAPHQL_CORS_DOMAIN: "*"
        ports:
            - '8080:8080'
        networks:
            - chat-app-prod-net
    chat-app-prod-front:
        build:
            context: ./chat-app-front
            dockerfile: Dockerfile.prod
        restart: unless-stopped
        depends_on:
            - "chat-app-prod-graphql-engine"
        environment:
            - WDS_SOCKET_PORT=0
        volumes:
            - ./chat-app-prod-front:/usr/src/app
            - /usr/src/app/node_modules
        networks:
            - chat-app-prod-net
    chat-app-prod-proxy:
        build:
            context: ./chat-app-proxy
        restart: unless-stopped
        depends_on: 
            - "chat-app-prod-graphql-engine"
            - "chat-app-prod-front"
        volumes:
            - ./chat-app-proxy/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./chat-app-proxy/logs/access.log:/var/log/nginx/access.log
            - ./chat-app-proxy/logs/error.log:/var/log/nginx/error.log
        ports:
            - '80:80'
        networks:
            - chat-app-prod-net
volumes:
    database-data-prod:
networks:
    chat-app-prod-net:
        name: chat-app-prod-net
